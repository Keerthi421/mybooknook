rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId}/{document=**} {
      allow read, write, delete: if request.auth != null && request.auth.uid == userId;
    }
    match /users/{userId}/cachedBooks/{bookId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    match /{path=**}/books/{bookId} {
      allow read: if request.auth != null && (
        // Allow reading books from the user's own lists
        resource.__name__.matches('^/databases/[^/]+/documents/users/' + request.auth.uid + '/lists/.*/books/.*') ||
        // Allow reading books where the user is the owner
        resource.data.userId == request.auth.uid
      );
      allow write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    match /users/{userId}/lists/{listId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Profile images
    match /profile_images/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Book covers
    match /book_covers/{userId}/{bookId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}